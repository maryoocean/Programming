ВОТ ТАК МОЖНО ПРОВЕРИТЬ, ПУСТАЯ СТРОКА ИЛИ НЕТ:

word = input('Введите слово: ')
print(bool(word))
if bool(word) == False:
    print('ой')

% - ОСТАТОК ОТ ЧИСЛА
in range (a,b) - то есть до b-1 (b не включается)
break - останавливает цикл по команде (например, когда выполнилось условие, или когда счетчик превысил нужный показатель)
continue - досрочно перейти к слеудющей итерации (то есть не останавливаать цикл, а продолжать)
Проверить алфавит можно, например, так:
    word = input ("введите слово:")
    cyrlet = 'абвгдеёжзийклмнопрстуфхцчшщьыъэюя'
    for letter in word:
        if (letter in cyrlet):
            break
    else:
        print ("Пожалуйста, используйте кириллицу")
        break
Поскольку считать питон начинает с 0, "нормального" порядка можно добиться так:
    a = 1
    for letter in word:
        if (a % 2 != 0) and (letter in ('о','п','е')) :
            print (letter)
        a += 1
guests.append("John Doe") - цепляем еще один элемент в список (в конец списка)
sentences = ["Hello!"] + ["I'm so glad to meet you.", "So, happy."]
sentences.extend(["Good bye.", "See you later."]) #добавление элементов одного списка в другой
sents_length = len(sentences)#длина списка

ИНДЕКСЫ
print(word[::-1]) - выводит слово наоборот
head = letters[1:4]    # с первого по третий элементы
first_three = letters[:3]    # то же, что letters[0:3]
tail = letters[4:]      # с четвёртого элемента до конца
last_three = letters[-3:]    # последние три элемента
without_last = letters[:-1]    # все элементы исключая последний

ФАЙЛЫ
.split() - разделить текст по словам (лист по элементам и тд)
По-умолчанию split() делит строку по пробелам, символам табуляции и переноса строки.
Кроме того, при таком вызове split(), в результирующий список не входят пустые строки.
with open("text.txt", encoding="utf-8") as f:
    text = f.read())   #по умолчанию .read() читает файл целиком
    splited_text = text.split()    #список из слов, иногда с "прилипшими" знаками препинания
with open("text.txt", encoding="utf-8") as f:
    lines = f.readlines()   #список из строк, каждая, быть может кроме последней, заканчивается символом переноса строки
with open("text.txt", encoding="utf-8") as f:
    text = f.read()
lines = text.splitlines()    #список из строк, символы перевода строки отброшены
.strip()    #удаляем пробельные символы, в том числе перенос строки, с начала и с конца строки
text = text.replace(",", "")    # заменяем одну подстроку на другую

# Создаем новый файл
with open("physics.txt", "w", encoding="utf-8") as f:
    f.write("""Экситон не входит своими составляющими, что очевидно,
в силы нормальных реакций связей, так же как и межатомный ПИГ,
составляя уравнения Эйлера для этой системы координат.
    """)
# Теперь файл закрыт. Перепишем его
# Стираем старый файл, создаем новый с тем же именем и открываем его для записи:
with open("physics.txt", "w", encoding="utf-8") as f:
    f.write("При погружении в жидкий кислород фотон искажает разрыв.\n")

# Открываем существующий файл, теперь write будет дописывать строку в его конец
with open("physics.txt", "a", encoding="utf-8") as f:
    f.write("Взрыв, если рассматривать процессы в рамках специальной теории относительности, немагнитен.\n")

# Проверим содержимое
# Здесь "r" означает read, но это значение по-умолчанию, можно как это делалось
# на прошлом занятии его вообще не писать:
with open("physics.txt", "r", encoding="utf-8") as f:
    first_line = f.readline()    # читаем первыую строку
    # Проверяем, что строка начинается с данной подстроки:
    if first_line.startswith("При погружении в жидкий"):
        print("От экситона не осталось и следа")
    second_line = f.readline().strip()    # читаем вторую строку и отрезаем ей \n
    if second_line.endswith("теории относительности, немагнитен."):
        print("Относительность относительна")
